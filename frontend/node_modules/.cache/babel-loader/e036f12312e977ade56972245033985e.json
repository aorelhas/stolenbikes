{"ast":null,"code":"import axios from 'axios';\nimport { CREATE_BIKE_REQUEST, CREATE_BIKE_SUCCESS, CREATE_BIKE_FAIL, LIST_BIKE_REQUEST, LIST_BIKE_SUCCESS, LIST_BIKE_FAIL } from '../constants/bikeContants';\nexport const createBike = (brand, model, nSerie, year, location, postalCode) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_BIKE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/bikes/add`, {\n      brand,\n      model,\n      nSerie,\n      location,\n      year,\n      postalCode\n    }, config);\n    dispatch({\n      type: CREATE_BIKE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: CREATE_BIKE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/actions/bikeActions.js"],"names":["axios","CREATE_BIKE_REQUEST","CREATE_BIKE_SUCCESS","CREATE_BIKE_FAIL","LIST_BIKE_REQUEST","LIST_BIKE_SUCCESS","LIST_BIKE_FAIL","createBike","brand","model","nSerie","year","location","postalCode","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","message","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,iBAJF,EAKEC,iBALF,EAMEC,cANF,QAOO,2BAPP;AASA,OAAO,MAAMC,UAAU,GAAG,CACxBC,KADwB,EAExBC,KAFwB,EAGxBC,MAHwB,EAIxBC,IAJwB,EAKxBC,QALwB,EAMxBC,UANwB,KAOrB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEf;AADC,KAAD,CAAR;AAIA,UAAM;AACJgB,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADjC;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMvB,KAAK,CAACwB,IAAN,CACpB,gBADoB,EAErB;AAAEhB,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,MAAhB;AAAwBE,MAAAA,QAAxB;AAAkCD,MAAAA,IAAlC;AAAwCE,MAAAA;AAAxC,KAFqB,EAGrBM,MAHqB,CAAvB;AAMAL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEd,mBADC;AAEPuB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GAzBD,CAyBE,OAAOG,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEb,gBADC;AAEPsB,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CA3CM","sourcesContent":["import axios from 'axios';\nimport {\n  CREATE_BIKE_REQUEST,\n  CREATE_BIKE_SUCCESS,\n  CREATE_BIKE_FAIL,\n  LIST_BIKE_REQUEST,\n  LIST_BIKE_SUCCESS,\n  LIST_BIKE_FAIL,\n} from '../constants/bikeContants';\n\nexport const createBike = (\n  brand,\n  model,\n  nSerie,\n  year,\n  location,\n  postalCode\n) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_BIKE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/bikes/add`,\n      { brand, model, nSerie, location, year, postalCode },\n      config\n    );\n\n    dispatch({\n      type: CREATE_BIKE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: CREATE_BIKE_FAIL,\n      payload: message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}