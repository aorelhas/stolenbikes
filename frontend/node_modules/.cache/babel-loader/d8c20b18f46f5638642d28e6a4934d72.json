{"ast":null,"code":"var _jsxFileName = \"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux'; // import { Button } from 'react-bootstrap';\n// import { useDispatch, useSelector } from 'react-redux';\n\nimport GoogleLogin from 'react-google-login'; // import { FacebookLogin } from 'react-facebook-login';\n\nimport env from 'react-dotenv'; // import { login } from '../actions/userActions';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const redirect = location.search ? location.search.split('=')[1] : '/dashboard';\n  useEffect(() => {\n    if (userInfo) history.push(redirect);\n  }, [history, userInfo, redirect]);\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n    localStorage.setItem('userInfo', JSON.stringify({\n      result,\n      token\n    }));\n    history.push('/dashboard');\n  };\n\n  const googleFailure = () => {\n    console.log('Google Sign In was unsuccessfull. Try Again.');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: env.GOOGLE_CLIENT_ID,\n      buttonText: \"Login\",\n      onSuccess: googleSuccess,\n      onFailure: googleFailure,\n      cookiePolicy: 'single_host_origin',\n      isSignedIn: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginScreen, \"UJvyyOkZFh8LAtWuhSU8bjYMa68=\", false, function () {\n  return [useSelector];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/LoginScreen.js"],"names":["React","useEffect","useSelector","GoogleLogin","env","LoginScreen","location","history","userLogin","state","userInfo","redirect","search","split","push","googleSuccess","res","result","profileObj","token","tokenId","localStorage","setItem","JSON","stringify","googleFailure","console","log","GOOGLE_CLIENT_ID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;AACA;;AACA,OAAOC,WAAP,MAAwB,oBAAxB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,cAAhB,C,CACA;;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAAA;;AAC7C,QAAMC,SAAS,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeF,SAArB;AAEA,QAAMG,QAAQ,GAAGL,QAAQ,CAACM,MAAT,GACbN,QAAQ,CAACM,MAAT,CAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CADa,GAEb,YAFJ;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,QAAJ,EAAcH,OAAO,CAACO,IAAR,CAAaH,QAAb;AACf,GAFQ,EAEN,CAACJ,OAAD,EAAUG,QAAV,EAAoBC,QAApB,CAFM,CAAT;;AAIA,QAAMI,aAAa,GAAG,MAAOC,GAAP,IAAe;AACnC,UAAMC,MAAM,GAAGD,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEE,UAApB;AAEA,UAAMC,KAAK,GAAGH,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEI,OAAnB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,MAAF;AAAUE,MAAAA;AAAV,KAAf,CAAjC;AACAZ,IAAAA,OAAO,CAACO,IAAR,CAAa,YAAb;AACD,GAND;;AAQA,QAAMW,aAAa,GAAG,MAAM;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,WAAD;AACE,MAAA,QAAQ,EAAEvB,GAAG,CAACwB,gBADhB;AAEE,MAAA,UAAU,EAAC,OAFb;AAGE,MAAA,SAAS,EAAEb,aAHb;AAIE,MAAA,SAAS,EAAEU,aAJb;AAKE,MAAA,YAAY,EAAE,oBALhB;AAME,MAAA,UAAU,EAAE;AANd;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAYD,CApCD;;GAAMpB,W;UACcH,W;;;KADdG,W;AAsCN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n// import { Button } from 'react-bootstrap';\n// import { useDispatch, useSelector } from 'react-redux';\nimport GoogleLogin from 'react-google-login';\n// import { FacebookLogin } from 'react-facebook-login';\nimport env from 'react-dotenv';\n// import { login } from '../actions/userActions';\n\nconst LoginScreen = ({ location, history }) => {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const redirect = location.search\n    ? location.search.split('=')[1]\n    : '/dashboard';\n\n  useEffect(() => {\n    if (userInfo) history.push(redirect);\n  }, [history, userInfo, redirect]);\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n\n    const token = res?.tokenId;\n    localStorage.setItem('userInfo', JSON.stringify({ result, token }));\n    history.push('/dashboard');\n  };\n\n  const googleFailure = () => {\n    console.log('Google Sign In was unsuccessfull. Try Again.');\n  };\n\n  return (\n    <>\n      <GoogleLogin\n        clientId={env.GOOGLE_CLIENT_ID}\n        buttonText=\"Login\"\n        onSuccess={googleSuccess}\n        onFailure={googleFailure}\n        cookiePolicy={'single_host_origin'}\n        isSignedIn={true}\n      />\n    </>\n  );\n};\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}