{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducer';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userReigster: userRegisterReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/store.js"],"names":["createStore","applyMiddleware","combineReducers","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","reducer","userLogin","userReigster","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,QAAsD,wBAAtD;AAEA,MAAMC,OAAO,GAAGL,eAAe,CAAC;AAC9BM,EAAAA,SAAS,EAAEH,gBADmB;AAE9BI,EAAAA,YAAY,EAAEH;AAFgB,CAAD,CAA/B;AAKA,MAAMI,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,YAAY,GAAG;AACnBP,EAAAA,SAAS,EAAE;AAAEQ,IAAAA,QAAQ,EAAEN;AAAZ;AADQ,CAArB;AAIA,MAAMO,UAAU,GAAG,CAACd,KAAD,CAAnB;AAEA,MAAMe,KAAK,GAAGlB,WAAW,CACvBO,OADuB,EAEvBQ,YAFuB,EAGvBX,mBAAmB,CAACH,eAAe,CAAC,GAAGgB,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducer';\n\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userReigster: userRegisterReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}