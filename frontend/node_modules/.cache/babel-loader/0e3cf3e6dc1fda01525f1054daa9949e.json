{"ast":null,"code":"import axios from 'axios';\nimport { CREATE_BIKE_REQUEST, CREATE_BIKE_SUCCESS, CREATE_BIKE_FAIL, LIST_BIKE_REQUEST, LIST_BIKE_SUCCESS, LIST_BIKE_FAIL, BIKE_DETAIL_REQUEST, BIKE_DETAIL_SUCCESS, BIKE_DETAIL_FAIL, MY_BIKE_REQUEST, MY_BIKE_SUCCESS, MY_BIKE_FAIL, MY_BIKE_UPDATE_REQUEST, MY_BIKE_UPDATE_SUCCESS, MY_BIKE_UPDATE_FAIL, MY_BIKE_DELETE_REQUEST, MY_BIKE_DELETE_SUCCESS, MY_BIKE_DELETE_FAIL, BIKE_TOP_REQUEST, BIKE_TOP_SUCCESS, BIKE_TOP_FAIL } from '../constants/bikeContants';\nexport const createBike = (brand, model, nSerie, year, image, location, description, postalCode) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_BIKE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/bikes/add`, {\n      brand,\n      model,\n      nSerie,\n      image,\n      location,\n      year,\n      description,\n      postalCode\n    }, config);\n    dispatch({\n      type: CREATE_BIKE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: CREATE_BIKE_FAIL,\n      payload: message\n    });\n  }\n}; // Implement keyword search by nSerie\n\nexport const listBikes = (keyword = '') => async dispatch => {\n  try {\n    dispatch({\n      type: LIST_BIKE_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/bikes?keyword=${keyword}`);\n    dispatch({\n      type: LIST_BIKE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: LIST_BIKE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listBikeDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: BIKE_DETAIL_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/bikes/${id}`);\n    dispatch({\n      type: BIKE_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BIKE_DETAIL_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getMyOwnBikes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MY_BIKE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('/api/bikes/mybikes', config);\n    dispatch({\n      type: MY_BIKE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: MY_BIKE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const bikeUpdate = bike => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MY_BIKE_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/bikes/${bike._id}`, bike, config);\n    dispatch({\n      type: MY_BIKE_UPDATE_SUCCESS,\n      payload: data\n    }); // dispatch({ type: MY_BIKE_UPDATE_SUCCESS });\n    // dispatch({ type: BIKE_DETAIL_SUCCESS, payload: data });\n    // dispatch({ type: BIKE_DETAIL_RESET });\n  } catch (error) {\n    const message = error.message && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: MY_BIKE_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteBike = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MY_BIKE_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/bikes/${id}`, config);\n    dispatch({\n      type: MY_BIKE_DELETE_SUCCESS\n    });\n    dispatch({\n      type: MY_BIKE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.message && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: MY_BIKE_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const bikeTop = () => async dispatch => {\n  try {\n    dispatch({\n      type: BIKE_TOP_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/bikes/top');\n    dispatch({\n      type: BIKE_TOP_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BIKE_TOP_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/actions/bikeActions.js"],"names":["axios","CREATE_BIKE_REQUEST","CREATE_BIKE_SUCCESS","CREATE_BIKE_FAIL","LIST_BIKE_REQUEST","LIST_BIKE_SUCCESS","LIST_BIKE_FAIL","BIKE_DETAIL_REQUEST","BIKE_DETAIL_SUCCESS","BIKE_DETAIL_FAIL","MY_BIKE_REQUEST","MY_BIKE_SUCCESS","MY_BIKE_FAIL","MY_BIKE_UPDATE_REQUEST","MY_BIKE_UPDATE_SUCCESS","MY_BIKE_UPDATE_FAIL","MY_BIKE_DELETE_REQUEST","MY_BIKE_DELETE_SUCCESS","MY_BIKE_DELETE_FAIL","BIKE_TOP_REQUEST","BIKE_TOP_SUCCESS","BIKE_TOP_FAIL","createBike","brand","model","nSerie","year","image","location","description","postalCode","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","message","response","listBikes","keyword","get","listBikeDetails","id","getMyOwnBikes","bikeUpdate","bike","put","_id","deleteBike","delete","bikeTop"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,gBAHF,EAIEC,iBAJF,EAKEC,iBALF,EAMEC,cANF,EAOEC,mBAPF,EAQEC,mBARF,EASEC,gBATF,EAUEC,eAVF,EAWEC,eAXF,EAYEC,YAZF,EAaEC,sBAbF,EAcEC,sBAdF,EAeEC,mBAfF,EAgBEC,sBAhBF,EAiBEC,sBAjBF,EAkBEC,mBAlBF,EAmBEC,gBAnBF,EAoBEC,gBApBF,EAqBEC,aArBF,QAsBO,2BAtBP;AAwBA,OAAO,MAAMC,UAAU,GAAG,CACxBC,KADwB,EAExBC,KAFwB,EAGxBC,MAHwB,EAIxBC,IAJwB,EAKxBC,KALwB,EAMxBC,QANwB,EAOxBC,WAPwB,EAQxBC,UARwB,KASrB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACjC,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEhC;AADC,KAAD,CAAR;AAIA,UAAM;AACJiC,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADjC;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMxC,KAAK,CAACyC,IAAN,CACpB,gBADoB,EAErB;AAAElB,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,MAAhB;AAAwBE,MAAAA,KAAxB;AAA+BC,MAAAA,QAA/B;AAAyCF,MAAAA,IAAzC;AAA+CG,MAAAA,WAA/C;AAA4DC,MAAAA;AAA5D,KAFqB,EAGrBM,MAHqB,CAAvB;AAMAL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE/B,mBADC;AAEPwC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GAzBD,CAyBE,OAAOG,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE9B,gBADC;AAEPuC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CA7CM,C,CA+CP;;AACA,OAAO,MAAME,SAAS,GAAG,CAACC,OAAO,GAAG,EAAX,KAAkB,MAAOhB,QAAP,IAAoB;AAC7D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE7B;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEoC,MAAAA;AAAF,QAAW,MAAMxC,KAAK,CAACgD,GAAN,CAAW,sBAAqBD,OAAQ,EAAxC,CAAvB;AAEAhB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE5B,iBADC;AAEPqC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOG,KAAP,EAAc;AACdZ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE3B,cADC;AAEPoC,MAAAA,OAAO,EACLC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC;AALL,KAAD,CAAR;AAOD;AACF,CAnBM;AAqBP,OAAO,MAAMK,eAAe,GAAIC,EAAD,IAAQ,MAAOnB,QAAP,IAAoB;AACzD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE1B;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEiC,MAAAA;AAAF,QAAW,MAAMxC,KAAK,CAACgD,GAAN,CAAW,cAAaE,EAAG,EAA3B,CAAvB;AAEAnB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEzB,mBADC;AAEPkC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOG,KAAP,EAAc;AACdZ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAExB,gBADC;AAEPiC,MAAAA,OAAO,EACLC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC;AALL,KAAD,CAAR;AAOD;AACF,CAnBM;AAqBP,OAAO,MAAMO,aAAa,GAAG,MAAM,OAAOpB,QAAP,EAAiBC,QAAjB,KAA8B;AAC/D,MAAI;AACFD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEvB;AAAR,KAAD,CAAR;AAEA,UAAM;AACJwB,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADjC;AADI,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMxC,KAAK,CAACgD,GAAN,CAAU,oBAAV,EAAgCZ,MAAhC,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEtB,eADC;AAEP+B,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GAnBD,CAmBE,OAAOG,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAErB,YADC;AAEP8B,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CA9BM;AAgCP,OAAO,MAAMQ,UAAU,GAAIC,IAAD,IAAU,OAAOtB,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAI;AACFD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEpB;AAAR,KAAD,CAAR;AAEA,UAAM;AACJqB,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMxC,KAAK,CAACsD,GAAN,CAAW,cAAaD,IAAI,CAACE,GAAI,EAAjC,EAAoCF,IAApC,EAA0CjB,MAA1C,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEnB,sBAAR;AAAgC4B,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR,CAhBE,CAiBF;AACA;AACA;AACD,GApBD,CAoBE,OAAOG,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAArC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAElB,mBADC;AAEP2B,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CA/BM;AAiCP,OAAO,MAAMY,UAAU,GAAIN,EAAD,IAAQ,OAAOnB,QAAP,EAAiBC,QAAjB,KAA8B;AAC9D,MAAI;AACFD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEjB;AAAR,KAAD,CAAR;AAEA,UAAM;AACJkB,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADjC;AADI,KAAf;AAMA,UAAMvC,KAAK,CAACyD,MAAN,CAAc,cAAaP,EAAG,EAA9B,EAAiCd,MAAjC,CAAN;AAEAL,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEhB;AAAR,KAAD,CAAR;AACAc,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEtB;AAAR,KAAD,CAAR;AACD,GAjBD,CAiBE,OAAOgC,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACC,OAAN,IAAiBD,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAArC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;AAIAb,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEf,mBADC;AAEPwB,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACF,CA5BM;AA8BP,OAAO,MAAMc,OAAO,GAAG,MAAM,MAAO3B,QAAP,IAAoB;AAC/C,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEd;AAAR,KAAD,CAAR;AAEA,UAAM;AAAEqB,MAAAA;AAAF,QAAW,MAAMxC,KAAK,CAACgD,GAAN,CAAU,gBAAV,CAAvB;AAEAjB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEb,gBADC;AAEPsB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOG,KAAP,EAAc;AACdZ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEZ,aADC;AAEPqB,MAAAA,OAAO,EACLC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC;AALL,KAAD,CAAR;AAOD;AACF,CAnBM","sourcesContent":["import axios from 'axios';\nimport {\n  CREATE_BIKE_REQUEST,\n  CREATE_BIKE_SUCCESS,\n  CREATE_BIKE_FAIL,\n  LIST_BIKE_REQUEST,\n  LIST_BIKE_SUCCESS,\n  LIST_BIKE_FAIL,\n  BIKE_DETAIL_REQUEST,\n  BIKE_DETAIL_SUCCESS,\n  BIKE_DETAIL_FAIL,\n  MY_BIKE_REQUEST,\n  MY_BIKE_SUCCESS,\n  MY_BIKE_FAIL,\n  MY_BIKE_UPDATE_REQUEST,\n  MY_BIKE_UPDATE_SUCCESS,\n  MY_BIKE_UPDATE_FAIL,\n  MY_BIKE_DELETE_REQUEST,\n  MY_BIKE_DELETE_SUCCESS,\n  MY_BIKE_DELETE_FAIL,\n  BIKE_TOP_REQUEST,\n  BIKE_TOP_SUCCESS,\n  BIKE_TOP_FAIL,\n} from '../constants/bikeContants';\n\nexport const createBike = (\n  brand,\n  model,\n  nSerie,\n  year,\n  image,\n  location,\n  description,\n  postalCode\n) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_BIKE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/bikes/add`,\n      { brand, model, nSerie, image, location, year, description, postalCode },\n      config\n    );\n\n    dispatch({\n      type: CREATE_BIKE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: CREATE_BIKE_FAIL,\n      payload: message,\n    });\n  }\n};\n\n// Implement keyword search by nSerie\nexport const listBikes = (keyword = '') => async (dispatch) => {\n  try {\n    dispatch({ type: LIST_BIKE_REQUEST });\n\n    const { data } = await axios.get(`/api/bikes?keyword=${keyword}`);\n\n    dispatch({\n      type: LIST_BIKE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: LIST_BIKE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listBikeDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: BIKE_DETAIL_REQUEST });\n\n    const { data } = await axios.get(`/api/bikes/${id}`);\n\n    dispatch({\n      type: BIKE_DETAIL_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: BIKE_DETAIL_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getMyOwnBikes = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: MY_BIKE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get('/api/bikes/mybikes', config);\n\n    dispatch({\n      type: MY_BIKE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: MY_BIKE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const bikeUpdate = (bike) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: MY_BIKE_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/bikes/${bike._id}`, bike, config);\n\n    dispatch({ type: MY_BIKE_UPDATE_SUCCESS, payload: data });\n    // dispatch({ type: MY_BIKE_UPDATE_SUCCESS });\n    // dispatch({ type: BIKE_DETAIL_SUCCESS, payload: data });\n    // dispatch({ type: BIKE_DETAIL_RESET });\n  } catch (error) {\n    const message =\n      error.message && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: MY_BIKE_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const deleteBike = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: MY_BIKE_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/bikes/${id}`, config);\n\n    dispatch({ type: MY_BIKE_DELETE_SUCCESS });\n    dispatch({ type: MY_BIKE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.message && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: MY_BIKE_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const bikeTop = () => async (dispatch) => {\n  try {\n    dispatch({ type: BIKE_TOP_REQUEST });\n\n    const { data } = await axios.get('/api/bikes/top');\n\n    dispatch({\n      type: BIKE_TOP_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: BIKE_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}