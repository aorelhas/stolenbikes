{"ast":null,"code":"import axios from 'axios';\nimport { CREATE_BIKE_REQUEST, CREATE_BIKE_SUCCESS, CREATE_BIKE_FAIL, LIST_BIKE_REQUEST, LIST_BIKE_SUCCESS, LIST_BIKE_FAIL, BIKE_DETAIL_REQUEST, BIKE_DETAIL_SUCCESS, BIKE_DETAIL_FAIL, MY_BIKE_REQUEST, MY_BIKE_SUCCESS, MY_BIKE_FAIL, MY_BIKE_UPDATE_REQUEST, MY_BIKE_UPDATE_SUCCESS, MY_BIKE_UPDATE_FAIL, MY_BIKE_DELETE_REQUEST, MY_BIKE_DELETE_SUCCESS, MY_BIKE_DELETE_FAIL, BIKE_TOP_REQUEST, BIKE_TOP_SUCCESS, BIKE_TOP_FAIL } from '../constants/bikeContants';\nexport const createBike = (brand, model, nSerie, year, location, description, postalCode) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_BIKE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/bikes/add`, {\n      brand,\n      model,\n      nSerie,\n      location,\n      year,\n      description,\n      postalCode\n    }, config);\n    dispatch({\n      type: CREATE_BIKE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: CREATE_BIKE_FAIL,\n      payload: message\n    });\n  }\n}; // Implement keyword search by nSerie\n\nexport const listBikes = () => async dispatch => {\n  try {\n    dispatch({\n      type: LIST_BIKE_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/bikes');\n    dispatch({\n      type: LIST_BIKE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: LIST_BIKE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listBikeDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: BIKE_DETAIL_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/bikes/${id}`);\n    dispatch({\n      type: BIKE_DETAIL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BIKE_DETAIL_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getMyOwnBikes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MY_BIKE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('/api/bikes/mybikes', config);\n    dispatch({\n      type: MY_BIKE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: MY_BIKE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const bikeUpdate = bike => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MY_BIKE_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/bikes/${bike._id}`, bike, config);\n    dispatch({\n      type: MY_BIKE_UPDATE_SUCCESS,\n      payload: data\n    }); // dispatch({ type: MY_BIKE_UPDATE_SUCCESS });\n    // dispatch({ type: BIKE_DETAIL_SUCCESS, payload: data });\n    // dispatch({ type: BIKE_DETAIL_RESET });\n  } catch (error) {\n    const message = error.message && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: MY_BIKE_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteBike = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MY_BIKE_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/bikes/${id}`, config);\n    dispatch({\n      type: MY_BIKE_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.message && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: MY_BIKE_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const bikeTop = () => async dispatch => {\n  try {\n    dispatch({\n      type: BIKE_TOP_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/bikes/top');\n    dispatch({\n      type: BIKE_TOP_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BIKE_TOP_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/actions/bikeActions.js"],"names":["axios","CREATE_BIKE_REQUEST","CREATE_BIKE_SUCCESS","CREATE_BIKE_FAIL","LIST_BIKE_REQUEST","LIST_BIKE_SUCCESS","LIST_BIKE_FAIL","BIKE_DETAIL_REQUEST","BIKE_DETAIL_SUCCESS","BIKE_DETAIL_FAIL","MY_BIKE_REQUEST","MY_BIKE_SUCCESS","MY_BIKE_FAIL","MY_BIKE_UPDATE_REQUEST","MY_BIKE_UPDATE_SUCCESS","MY_BIKE_UPDATE_FAIL","MY_BIKE_DELETE_REQUEST","MY_BIKE_DELETE_SUCCESS","MY_BIKE_DELETE_FAIL","BIKE_TOP_REQUEST","BIKE_TOP_SUCCESS","BIKE_TOP_FAIL","createBike","brand","model","nSerie","year","location","description","postalCode","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","message","response","listBikes","get","listBikeDetails","id","getMyOwnBikes","bikeUpdate","bike","put","_id","deleteBike","delete","bikeTop"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  CREATE_BIKE_REQUEST,\n  CREATE_BIKE_SUCCESS,\n  CREATE_BIKE_FAIL,\n  LIST_BIKE_REQUEST,\n  LIST_BIKE_SUCCESS,\n  LIST_BIKE_FAIL,\n  BIKE_DETAIL_REQUEST,\n  BIKE_DETAIL_SUCCESS,\n  BIKE_DETAIL_FAIL,\n  MY_BIKE_REQUEST,\n  MY_BIKE_SUCCESS,\n  MY_BIKE_FAIL,\n  MY_BIKE_UPDATE_REQUEST,\n  MY_BIKE_UPDATE_SUCCESS,\n  MY_BIKE_UPDATE_FAIL,\n  MY_BIKE_DELETE_REQUEST,\n  MY_BIKE_DELETE_SUCCESS,\n  MY_BIKE_DELETE_FAIL,\n  BIKE_TOP_REQUEST,\n  BIKE_TOP_SUCCESS,\n  BIKE_TOP_FAIL,\n} from '../constants/bikeContants';\n\nexport const createBike = (\n  brand,\n  model,\n  nSerie,\n  year,\n  location,\n  description,\n  postalCode\n) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_BIKE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/bikes/add`,\n      { brand, model, nSerie, location, year, description, postalCode },\n      config\n    );\n\n    dispatch({\n      type: CREATE_BIKE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: CREATE_BIKE_FAIL,\n      payload: message,\n    });\n  }\n};\n\n// Implement keyword search by nSerie\nexport const listBikes = () => async (dispatch) => {\n  try {\n    dispatch({ type: LIST_BIKE_REQUEST });\n\n    const { data } = await axios.get('/api/bikes');\n\n    dispatch({\n      type: LIST_BIKE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: LIST_BIKE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listBikeDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: BIKE_DETAIL_REQUEST });\n\n    const { data } = await axios.get(`/api/bikes/${id}`);\n\n    dispatch({\n      type: BIKE_DETAIL_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: BIKE_DETAIL_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getMyOwnBikes = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: MY_BIKE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get('/api/bikes/mybikes', config);\n\n    dispatch({\n      type: MY_BIKE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: MY_BIKE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const bikeUpdate = (bike) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: MY_BIKE_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/bikes/${bike._id}`, bike, config);\n\n    dispatch({ type: MY_BIKE_UPDATE_SUCCESS, payload: data });\n    // dispatch({ type: MY_BIKE_UPDATE_SUCCESS });\n    // dispatch({ type: BIKE_DETAIL_SUCCESS, payload: data });\n    // dispatch({ type: BIKE_DETAIL_RESET });\n  } catch (error) {\n    const message =\n      error.message && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: MY_BIKE_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const deleteBike = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: MY_BIKE_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/bikes/${id}`, config);\n\n    dispatch({ type: MY_BIKE_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.message && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: MY_BIKE_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const bikeTop = () => async (dispatch) => {\n  try {\n    dispatch({ type: BIKE_TOP_REQUEST });\n\n    const { data } = await axios.get('/api/bikes/top');\n\n    dispatch({\n      type: BIKE_TOP_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: BIKE_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}