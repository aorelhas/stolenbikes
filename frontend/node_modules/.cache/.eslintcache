[{"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/index.js":"1","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/App.js":"2","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/homeScreen.js":"3","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/header.js":"4","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Header.js":"5","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Footer.js":"6","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/store.js":"7","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/reducers/userReducer.js":"8","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/constants/userConstants.js":"9","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/LoginScreen.js":"10","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/HomeScreen.js":"11","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/actions/userActions.js":"12","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/FormContainer.js":"13","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Loader.js":"14","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/RegisterScreen.js":"15","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/CreateBikeScreen.js":"16","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/reducers/bikeReducer.js":"17","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/constants/bikeContants.js":"18","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/actions/bikeActions.js":"19","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Bike.js":"20","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/BikeScreen.js":"21","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Meta.js":"22","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Message.js":"23","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/UserAccountScreen.js":"24","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/MyBikeScreen.js":"25","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Hero.js":"26","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Services.js":"27"},{"size":317,"mtime":1617914873015,"results":"28","hashOfConfig":"29"},{"size":1174,"mtime":1620336269660,"results":"30","hashOfConfig":"29"},{"size":154,"mtime":1618262279194,"results":"31","hashOfConfig":"29"},{"size":544,"mtime":1617914422531,"results":"32","hashOfConfig":"29"},{"size":1804,"mtime":1620766680328,"results":"33","hashOfConfig":"29"},{"size":831,"mtime":1618520807608,"results":"34","hashOfConfig":"29"},{"size":1272,"mtime":1620406987986,"results":"35","hashOfConfig":"29"},{"size":2581,"mtime":1620125465764,"results":"36","hashOfConfig":"29"},{"size":1069,"mtime":1620124373496,"results":"37","hashOfConfig":"29"},{"size":2160,"mtime":1619713348674,"results":"38","hashOfConfig":"29"},{"size":1141,"mtime":1620767021300,"results":"39","hashOfConfig":"29"},{"size":4581,"mtime":1620126480097,"results":"40","hashOfConfig":"29"},{"size":336,"mtime":1618589610027,"results":"41","hashOfConfig":"29"},{"size":386,"mtime":1618589622433,"results":"42","hashOfConfig":"29"},{"size":3508,"mtime":1619713306125,"results":"43","hashOfConfig":"29"},{"size":3566,"mtime":1620336084329,"results":"44","hashOfConfig":"29"},{"size":2993,"mtime":1620750248569,"results":"45","hashOfConfig":"29"},{"size":1189,"mtime":1620680726175,"results":"46","hashOfConfig":"29"},{"size":4501,"mtime":1620766010867,"results":"47","hashOfConfig":"29"},{"size":580,"mtime":1619643819335,"results":"48","hashOfConfig":"29"},{"size":2126,"mtime":1620336161596,"results":"49","hashOfConfig":"29"},{"size":593,"mtime":1619710026920,"results":"50","hashOfConfig":"29"},{"size":244,"mtime":1619712890085,"results":"51","hashOfConfig":"29"},{"size":6966,"mtime":1620766385027,"results":"52","hashOfConfig":"29"},{"size":5739,"mtime":1620766033846,"results":"53","hashOfConfig":"29"},{"size":590,"mtime":1620770501609,"results":"54","hashOfConfig":"29"},{"size":158,"mtime":1620767001953,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1y17kgn",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/index.js",[],["116","117"],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/App.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/homeScreen.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/header.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Header.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Footer.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/store.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/reducers/userReducer.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/constants/userConstants.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/LoginScreen.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/HomeScreen.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/actions/userActions.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/FormContainer.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Loader.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/RegisterScreen.js",["118"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Form, Row, Col } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { register } from '../actions/userActions';\n\nconst RegisterScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      console.log('Password do not match');\n    } else {\n      dispatch(register(username, name, email, password));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Create Account</h1>\n      {message && <Message variant=\"danger\">{message}</Message>}\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"name\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"username\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"confirmPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\">\n          Register\n        </Button>\n      </Form>\n\n      <Row className=\"py-3\">\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default RegisterScreen;\n","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/CreateBikeScreen.js",["119","120","121"],"import React, { useState, useEffect } from 'react';\nimport FormContainer from '../components/FormContainer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Form } from 'react-bootstrap';\nimport { createBike } from '../actions/bikeActions';\nimport { CREATE_NEW_BIKE_RESET } from '../constants/bikeContants';\n\nconst CreateBike = ({ history }) => {\n  const [brand, setBrand] = useState('');\n  const [model, setModel] = useState('');\n  const [nSerie, setnSerie] = useState('');\n  const [year, setYear] = useState('');\n  const [location, setLocation] = useState('');\n  const [description, setDescription] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n\n  const dispatch = useDispatch();\n\n  const createNewBike = useSelector((state) => state.createNewBike);\n  const { bike, success, error } = createNewBike;\n\n  useEffect(() => {\n    if (success) {\n      history.push('/');\n      dispatch({ type: CREATE_NEW_BIKE_RESET });\n    }\n  }, [history, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      createBike(brand, model, nSerie, year, location, description, postalCode)\n    );\n  };\n\n  return (\n    <FormContainer>\n      <h1>Add Bike</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"brand\">\n          <Form.Label>Marca</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Marca\"\n            value={brand}\n            onChange={(e) => setBrand(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"model\">\n          <Form.Label>Modelo</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Modelo\"\n            value={model}\n            onChange={(e) => setModel(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"nSerie\">\n          <Form.Label>Número Série</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Número Série\"\n            value={nSerie}\n            onChange={(e) => setnSerie(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"year\">\n          <Form.Label>Ano</Form.Label>\n          <Form.Control\n            type=\"number\"\n            placeholder=\"Ano\"\n            value={year}\n            onChange={(e) => setYear(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"location\">\n          <Form.Label>Localização</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Localização\"\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"postalCode\">\n          <Form.Label>Código Postal</Form.Label>\n          <Form.Control\n            type=\"number\"\n            placeholder=\"Código Postal\"\n            value={postalCode}\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId=\"description\">\n          <Form.Label>Descrição</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            placeholder=\"Descrição\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          Registar Bicicleta\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n};\n\nexport default CreateBike;\n","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/reducers/bikeReducer.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/constants/bikeContants.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/actions/bikeActions.js",["122","123"],"import axios from 'axios';\nimport {\n  CREATE_BIKE_REQUEST,\n  CREATE_BIKE_SUCCESS,\n  CREATE_BIKE_FAIL,\n  LIST_BIKE_REQUEST,\n  LIST_BIKE_SUCCESS,\n  LIST_BIKE_FAIL,\n  BIKE_DETAIL_REQUEST,\n  BIKE_DETAIL_SUCCESS,\n  BIKE_DETAIL_FAIL,\n  MY_BIKE_REQUEST,\n  MY_BIKE_SUCCESS,\n  MY_BIKE_FAIL,\n  MY_BIKE_UPDATE_REQUEST,\n  MY_BIKE_UPDATE_SUCCESS,\n  MY_BIKE_UPDATE_FAIL,\n  MY_BIKE_DELETE_REQUEST,\n  MY_BIKE_DELETE_SUCCESS,\n  MY_BIKE_DELETE_FAIL,\n  MY_BIKE_UPDATE_RESET,\n  BIKE_DETAIL_RESET,\n} from '../constants/bikeContants';\n\nexport const createBike = (\n  brand,\n  model,\n  nSerie,\n  year,\n  location,\n  description,\n  postalCode\n) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_BIKE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/bikes/add`,\n      { brand, model, nSerie, location, year, description, postalCode },\n      config\n    );\n\n    dispatch({\n      type: CREATE_BIKE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: CREATE_BIKE_FAIL,\n      payload: message,\n    });\n  }\n};\n\n// Implement keyword search by nSerie\nexport const listBikes = () => async (dispatch) => {\n  try {\n    dispatch({ type: LIST_BIKE_REQUEST });\n\n    const { data } = await axios.get('/api/bikes');\n\n    dispatch({\n      type: LIST_BIKE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: LIST_BIKE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listBikeDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: BIKE_DETAIL_REQUEST });\n\n    const { data } = await axios.get(`/api/bikes/${id}`);\n\n    dispatch({\n      type: BIKE_DETAIL_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: BIKE_DETAIL_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getMyOwnBikes = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: MY_BIKE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get('/api/bikes/mybikes', config);\n\n    dispatch({\n      type: MY_BIKE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: MY_BIKE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const bikeUpdate = (bike) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: MY_BIKE_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/bikes/${bike._id}`, bike, config);\n\n    dispatch({ type: MY_BIKE_UPDATE_SUCCESS, payload: data });\n    // dispatch({ type: MY_BIKE_UPDATE_SUCCESS });\n    // dispatch({ type: BIKE_DETAIL_SUCCESS, payload: data });\n    // dispatch({ type: BIKE_DETAIL_RESET });\n  } catch (error) {\n    const message =\n      error.message && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: MY_BIKE_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const deleteBike = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: MY_BIKE_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/bikes/${id}`, config);\n\n    dispatch({ type: MY_BIKE_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.message && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: MY_BIKE_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Bike.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/BikeScreen.js",["124","125","126","127","128"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from 'react-bootstrap';\nimport Meta from '../components/Meta';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listBikeDetails } from '../actions/bikeActions';\n\nconst BikeScreen = ({ match }) => {\n  const dispatch = useDispatch();\n\n  const bikeDetail = useSelector((state) => state.bikeDetail);\n  const { loading, error, bike } = bikeDetail;\n\n  useEffect(() => {\n    dispatch(listBikeDetails(match.params.id));\n  }, [dispatch, match]);\n\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to=\"/\">\n        {' '}\n        Voltar\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta title={bike.brand} description={bike.model} />\n          <Row>\n            <Col md={8}>\n              <h3>IMAGE</h3>\n              {/* <Image src={bike.image} alt={bike.model} fluid /> */}\n            </Col>\n            <Col md={4}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{bike.brand}</h3>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <strong>Model:</strong> {bike.model}\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <strong>Ano:</strong> {bike.year}\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <strong>Localização:</strong> {bike.location}\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <strong>Descrição:</strong> {bike.description}\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <strong>Cód. Postal:</strong> {bike.postalCode}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default BikeScreen;\n","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Meta.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Message.js",[],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/UserAccountScreen.js",["129"],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/screens/MyBikeScreen.js",["130","131","132","133","134"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from 'react-bootstrap';\nimport Meta from '../components/Meta';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport Loader from '../components/Loader';\nimport { listBikeDetails, bikeUpdate } from '../actions/bikeActions';\nimport { MY_BIKE_UPDATE_RESET } from '../constants/bikeContants';\n\nconst MyBikeScreen = ({ history, match }) => {\n  const bikeId = match.params.id;\n\n  const [brand, setBrand] = useState('');\n  const [model, setModel] = useState('');\n  const [nSerie, setnSerie] = useState('');\n  const [year, setYear] = useState('');\n  const [location, setLocation] = useState('');\n  const [description, setDescription] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n  const [isRecovered, setIsRecovered] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const bikeDetail = useSelector((state) => state.bikeDetail);\n  const { loading, error, bike } = bikeDetail;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!bike.brand || bike._id !== bikeId) {\n        dispatch(listBikeDetails(bikeId));\n      } else {\n        setBrand(bike.brand);\n        setModel(bike.model);\n        setnSerie(bike.nSerie);\n        setYear(bike.year);\n        setLocation(bike.location);\n        setDescription(bike.description);\n        setPostalCode(bike.postalCode);\n        setIsRecovered(bike.isRecovered);\n      }\n    }\n  }, [dispatch, history, bike, bikeId]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    \n    dispatch(\n      bikeUpdate({\n        _id: bikeId,\n        brand,\n        model,\n        nSerie,\n        year,\n        location,\n        postalCode,\n        description,\n        isRecovered,\n      })\n    );\n  };\n\n  return (\n    <>\n      <Link className=\"btn btn-light my-3\" to=\"/profile\">\n        {' '}\n        Voltar\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Meta title={bike.brand} description={bike.model} />\n          <FormContainer>\n            <h2>Editar Bicicleta</h2>\n          </FormContainer>\n\n          <Row>\n            <Col md={8}>\n              <h3>IMAGE</h3>\n              {/* <Image src={bike.image} alt={bike.model} fluid /> */}\n            </Col>\n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId=\"brand\">\n                <Form.Label>Marca</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Marca\"\n                  value={brand}\n                  onChange={(e) => setBrand(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"model\">\n                <Form.Label>Modelo</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Modelo\"\n                  value={model}\n                  onChange={(e) => setModel(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"nSerie\">\n                <Form.Label>Número Série</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Número Série\"\n                  value={nSerie}\n                  onChange={(e) => setnSerie(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"year\">\n                <Form.Label>Ano</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Ano\"\n                  value={year}\n                  onChange={(e) => setYear(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"location\">\n                <Form.Label>Localização</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Localização\"\n                  value={location}\n                  onChange={(e) => setLocation(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"postalCode\">\n                <Form.Label>Código Postal</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"Código Postal\"\n                  value={postalCode}\n                  onChange={(e) => setPostalCode(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"description\">\n                <Form.Label>Descrição</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  placeholder=\"Descrição\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"isRecovered\">\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"Recuperada?\"\n                  checked={isRecovered}\n                  onChange={(e) => setIsRecovered(e.target.checked)}\n                ></Form.Check>\n              </Form.Group>\n\n              <Button type=\"submit\" variant=\"primary\">\n                Guardar\n              </Button>\n            </Form>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MyBikeScreen;\n","/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Hero.js",["135"],"/Users/carlosorelhas/Desktop/projects.nosync/stolenbikes/frontend/src/components/Services.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":16,"column":19,"nodeType":"142","messageId":"143","endLine":16,"endColumn":29},{"ruleId":"140","severity":1,"message":"144","line":20,"column":11,"nodeType":"142","messageId":"143","endLine":20,"endColumn":15},{"ruleId":"140","severity":1,"message":"145","line":20,"column":26,"nodeType":"142","messageId":"143","endLine":20,"endColumn":31},{"ruleId":"146","severity":1,"message":"147","line":27,"column":6,"nodeType":"148","endLine":27,"endColumn":24,"suggestions":"149"},{"ruleId":"140","severity":1,"message":"150","line":21,"column":3,"nodeType":"142","messageId":"143","endLine":21,"endColumn":23},{"ruleId":"140","severity":1,"message":"151","line":22,"column":3,"nodeType":"142","messageId":"143","endLine":22,"endColumn":20},{"ruleId":"140","severity":1,"message":"152","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"153","line":7,"column":3,"nodeType":"142","messageId":"143","endLine":7,"endColumn":8},{"ruleId":"140","severity":1,"message":"154","line":9,"column":3,"nodeType":"142","messageId":"143","endLine":9,"endColumn":7},{"ruleId":"140","severity":1,"message":"155","line":10,"column":3,"nodeType":"142","messageId":"143","endLine":10,"endColumn":9},{"ruleId":"140","severity":1,"message":"156","line":11,"column":3,"nodeType":"142","messageId":"143","endLine":11,"endColumn":7},{"ruleId":"140","severity":1,"message":"151","line":15,"column":10,"nodeType":"142","messageId":"143","endLine":15,"endColumn":27},{"ruleId":"140","severity":1,"message":"153","line":7,"column":3,"nodeType":"142","messageId":"143","endLine":7,"endColumn":8},{"ruleId":"140","severity":1,"message":"157","line":8,"column":3,"nodeType":"142","messageId":"143","endLine":8,"endColumn":12},{"ruleId":"140","severity":1,"message":"154","line":9,"column":3,"nodeType":"142","messageId":"143","endLine":9,"endColumn":7},{"ruleId":"140","severity":1,"message":"150","line":18,"column":10,"nodeType":"142","messageId":"143","endLine":18,"endColumn":30},{"ruleId":"146","severity":1,"message":"158","line":57,"column":6,"nodeType":"148","endLine":57,"endColumn":39,"suggestions":"159"},{"ruleId":"140","severity":1,"message":"155","line":3,"column":21,"nodeType":"142","messageId":"143","endLine":3,"endColumn":27},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'setMessage' is assigned a value but never used.","Identifier","unusedVar","'bike' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["162"],"'MY_BIKE_UPDATE_RESET' is defined but never used.","'BIKE_DETAIL_RESET' is defined but never used.","'useState' is defined but never used.","'Image' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'ListGroup' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["163"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [dispatch, history, success]",{"range":"168","text":"169"},"Update the dependencies array to be: [dispatch, history, bike, bikeId, userInfo]",{"range":"170","text":"171"},[974,992],"[dispatch, history, success]",[1760,1793],"[dispatch, history, bike, bikeId, userInfo]"]